{"ast":null,"code":"var _jsxFileName = \"D:\\\\new_redex\\\\project\\\\reduxthunk\\\\src\\\\App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { intenalUserAction, externalUserAction, subscribeAction } from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: JSON.stringify(this.props)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst middleware = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n  };\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: () => dispatch(middleware())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/new_redex/project/reduxthunk/src/App.js"],"names":["React","ReactDOM","useSelector","useDispatch","connect","intenalUserAction","externalUserAction","subscribeAction","App","Component","constructor","props","render","JSON","stringify","middleware","dispatch","type","mapStateToProps","state","console","log","mapDispatchToProps","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAiD,aAAjD;AACA,SAAQC,iBAAR,EAA2BC,kBAA3B,EAA+CC,eAA/C,QAAqE,SAArE;;;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AACDC,EAAAA,MAAM,GAAE;AACL,wBACC;AAAA,6BACA;AAAA,kBAAKC,IAAI,CAACC,SAAL,CAAe,KAAKH,KAApB;AAAL;AAAA;AAAA;AAAA;AAAA;AADA,qBADD;AAQF;;AAb+B;;AAiBlC,MAAMI,UAAU,GAAG,MAAK;AACtB,SAAOC,QAAQ,IAAG;AAChBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACD,GAFD;AAGD,CAJD;;AAMA,MAAMC,eAAe,GAAIC,KAAD,IAAS;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAOA,KAAP;AACA,CAHF;;AAKC,MAAMG,kBAAkB,GAAGN,QAAD,IAAa;AACrC,SAAM;AACJO,IAAAA,KAAK,EAAG,MAAMP,QAAQ,CAACD,UAAU,EAAX;AADlB,GAAN;AAID,CALD;;AAMA,eAAeX,OAAO,CAACc,eAAD,EAAiBI,kBAAjB,CAAP,CAA4Cd,GAA5C,CAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch ,connect} from 'react-redux'\nimport {intenalUserAction, externalUserAction, subscribeAction} from './index';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n     return (\n      <>\n      <h1>{JSON.stringify(this.props)}</h1>\n      </>\n\n     );\n\n\n  }\n\n}\n\nconst middleware = () =>{\n  return dispatch =>{\n    dispatch({type:'LOGIN_START'});\n  }\n}\n\nconst mapStateToProps = (state)=>{\n  console.log(state);\n  return state;\n }\n \n const mapDispatchToProps= (dispatch) =>{\n   return{\n     login : () => dispatch(middleware())\n    \n   }\n }\n export default connect(mapStateToProps,mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}