{"ast":null,"code":"var _jsxFileName = \"D:\\\\new_redex\\\\project\\\\reduxthunk\\\\src\\\\App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { intenalUserAction, externalUserAction, subscribeAction } from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.isSubscribe ? 'true' : 'false'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.stateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !this.props.isSubscribe,\n        onClick: () => this.props.intenalUser(),\n        children: \"Internal User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !this.props.isSubscribe,\n        onClick: () => this.props.externalUser(),\n        children: \"External Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.subscribe(),\n        children: !this.props.isSubscribe ? 'Subscribe' : 'UnSubscribe'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    intenalUser: () => dispatch(intenalUserAction()),\n    externalUser: () => dispatch(externalUserAction()),\n    subscribe: () => dispatch(subscribeAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/new_redex/project/reduxthunk/src/App.js"],"names":["React","ReactDOM","useSelector","useDispatch","connect","intenalUserAction","externalUserAction","subscribeAction","App","Component","constructor","props","render","isSubscribe","stateValue","intenalUser","externalUser","subscribe","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAiD,aAAjD;AACA,SAAQC,iBAAR,EAA2BC,kBAA3B,EAA+CC,eAA/C,QAAqE,SAArE;;;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AACDC,EAAAA,MAAM,GAAE;AACL,wBACC;AAAA,8BACA;AAAA,kBAAK,KAAKD,KAAL,CAAWE,WAAX,GAAuB,MAAvB,GAA8B;AAAnC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAK,KAAKF,KAAL,CAAWG;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,QAAQ,EAAI,CAAC,KAAKH,KAAL,CAAWE,WAAhC;AAA8C,QAAA,OAAO,EAAI,MAAI,KAAKF,KAAL,CAAWI,WAAX,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,uBAIA;AAAQ,QAAA,QAAQ,EAAI,CAAC,KAAKJ,KAAL,CAAWE,WAAhC;AAA6C,QAAA,OAAO,EAAI,MAAI,KAAKF,KAAL,CAAWK,YAAX,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,wBAKA;AAAQ,QAAA,OAAO,EAAI,MAAI,KAAKL,KAAL,CAAWM,SAAX,EAAvB;AAAA,kBAAgD,CAAC,KAAKN,KAAL,CAAWE,WAAZ,GAAwB,WAAxB,GAAoC;AAApF;AAAA;AAAA;AAAA;AAAA,cALA;AAAA,oBADD;AAYF;;AAjB+B;;AAsBlC,MAAMK,eAAe,GAAIC,KAAD,IAAS;AAC/B,SAAOA,KAAP;AACA,CAFF;;AAIC,MAAMC,kBAAkB,GAAGC,QAAD,IAAa;AACrC,SAAM;AACJN,IAAAA,WAAW,EAAG,MAAMM,QAAQ,CAAChB,iBAAiB,EAAlB,CADxB;AAEJW,IAAAA,YAAY,EAAG,MAAMK,QAAQ,CAACf,kBAAkB,EAAnB,CAFzB;AAGJW,IAAAA,SAAS,EAAG,MAAMI,QAAQ,CAACd,eAAe,EAAhB;AAHtB,GAAN;AAKD,CAND;;AAOA,eAAeH,OAAO,CAACc,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CZ,GAA5C,CAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch ,connect} from 'react-redux'\nimport {intenalUserAction, externalUserAction, subscribeAction} from './index';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n     return (\n      <>\n      <h1>{this.props.isSubscribe?'true':'false'}</h1>\n      <h1>{this.props.stateValue}</h1>    \n      <button disabled = {!this.props.isSubscribe}  onClick = {()=>this.props.intenalUser()}>Internal User</button>&nbsp;\n      <button disabled = {!this.props.isSubscribe} onClick = {()=>this.props.externalUser()}>External Action</button> &nbsp;  \n      <button onClick = {()=>this.props.subscribe()}>{!this.props.isSubscribe?'Subscribe':'UnSubscribe'}</button>  \n      </>\n\n     );\n\n\n  }\n\n}\n\n\nconst mapStateToProps = (state)=>{\n  return state;\n }\n \n const mapDispatchToProps= (dispatch) =>{\n   return{\n     intenalUser : () => dispatch(intenalUserAction()),\n     externalUser : () => dispatch(externalUserAction()),\n     subscribe : () => dispatch(subscribeAction())\n   }\n }\n export default connect(mapStateToProps,mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}