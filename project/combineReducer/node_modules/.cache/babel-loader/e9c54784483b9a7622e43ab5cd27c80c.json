{"ast":null,"code":"var _jsxFileName = \"D:\\\\new_redex\\\\project\\\\reduxthunk\\\\src\\\\App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { intenalUserAction, externalUserAction, subscribeAction } from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Loading : \", this.props.loading ? 'true' : 'false']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: JSON.stringify(this.props.data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: JSON.stringify(this.props.error)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst middleware = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    fetch('https://jsonplaceholder.typicode.com/todos/1').then(response => response.json()).then(json => dispatch({\n      type: 'LOGIN_SUCCESS',\n      payload: json\n    })).catch(err => dispatch({\n      type: 'LOGIN_FAILIR',\n      payload: json\n    }));\n  };\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: () => dispatch(middleware())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/new_redex/project/reduxthunk/src/App.js"],"names":["React","ReactDOM","useSelector","useDispatch","connect","intenalUserAction","externalUserAction","subscribeAction","App","Component","constructor","props","render","loading","JSON","stringify","data","error","middleware","dispatch","type","fetch","then","response","json","payload","catch","err","mapStateToProps","state","console","log","mapDispatchToProps","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAiD,aAAjD;AACA,SAAQC,iBAAR,EAA2BC,kBAA3B,EAA+CC,eAA/C,QAAqE,SAArE;;;;AAGA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AACDC,EAAAA,MAAM,GAAE;AACL,wBACC;AAAA,8BACA;AAAA,iCAAe,KAAKD,KAAL,CAAWE,OAAX,GAAmB,MAAnB,GAA0B,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAKC,IAAI,CAACC,SAAL,CAAe,KAAKJ,KAAL,CAAWK,IAA1B;AAAL;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,kBAAKF,IAAI,CAACC,SAAL,CAAe,KAAKJ,KAAL,CAAWM,KAA1B;AAAL;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA,oBADD;AAWF;;AAhB+B;;AAoBlC,MAAMC,UAAU,GAAG,MAAK;AACtB,SAAOC,QAAQ,IAAG;AAChBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACAC,IADA,CACKC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADjB,EAEAF,IAFA,CAEKE,IAAI,IAAIL,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,eAAN;AAAsBK,MAAAA,OAAO,EAACD;AAA9B,KAAD,CAFrB,EAGAE,KAHA,CAGMC,GAAG,IAAIR,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,cAAN;AAAqBK,MAAAA,OAAO,EAACD;AAA7B,KAAD,CAHrB;AAID,GAND;AAOD,CARD;;AAUA,MAAMI,eAAe,GAAIC,KAAD,IAAS;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAOA,KAAP;AACA,CAHF;;AAKC,MAAMG,kBAAkB,GAAGb,QAAD,IAAa;AACrC,SAAM;AACJc,IAAAA,KAAK,EAAG,MAAMd,QAAQ,CAACD,UAAU,EAAX;AADlB,GAAN;AAID,CALD;;AAMA,eAAed,OAAO,CAACwB,eAAD,EAAiBI,kBAAjB,CAAP,CAA4CxB,GAA5C,CAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch ,connect} from 'react-redux'\nimport {intenalUserAction, externalUserAction, subscribeAction} from './index';\n \n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n     return (\n      <>\n      <h1>Loading : {this.props.loading?'true':'false'}</h1>\n      <h1>{JSON.stringify(this.props.data)}</h1>\n      <h1>{JSON.stringify(this.props.error)}</h1>\n      \n      </>\n\n     );\n\n\n  }\n\n}\n\nconst middleware = () =>{\n  return dispatch =>{\n    dispatch({type:'LOGIN_START'});\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n   .then(response => response.json())\n   .then(json => dispatch({type:'LOGIN_SUCCESS',payload:json}))\n   .catch(err => dispatch({type:'LOGIN_FAILIR',payload:json}) )\n  }\n}\n\nconst mapStateToProps = (state)=>{\n  console.log(state);\n  return state;\n }\n \n const mapDispatchToProps= (dispatch) =>{\n   return{\n     login : () => dispatch(middleware())\n    \n   }\n }\n export default connect(mapStateToProps,mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}