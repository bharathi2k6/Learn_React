{"ast":null,"code":"// Example 2\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore } from 'redux';\n/* \r\nExample 1:\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {createStore} from 'redux';\r\n\r\nconst INTERNAL_USER = 'INTERNAL_USER';\r\nconst EXTERNAL_USER = 'EXTERNAL_USER';\r\n// Action\r\nconst intenalUserAction = () => ({type:INTERNAL_USER});\r\nconst externalUserAction = () => ({type:EXTERNAL_USER});\r\n// Reducer\r\n\r\nconst userReducer = (state,action) => {\r\n switch(action.type){\r\n   case INTERNAL_USER:\r\n     return state = 'user form internal';\r\n  \r\n  case EXTERNAL_USER:\r\n    return state = 'User from outsource';\r\n  \r\n  default:\r\n    return state='User type is not able to find';  \r\n }\r\n}\r\n\r\n// store \r\nlet store = createStore(userReducer);\r\n store.subscribe(() =>\r\n  console.log('State after dispatch: ', store.getState())\r\n);\r\n\r\n// disapatch\r\nconsole.log(store.dispatch(intenalUserAction()));\r\nconsole.log(store.dispatch(externalUserAction()));\r\n\r\nReactDOM.render(<h1>test</h1>,document.getElementById('root')); */\n\n/* \r\n\r\n\r\n */","map":{"version":3,"sources":["D:/new_redex/redux/src/index.js"],"names":["React","ReactDOM","createStore"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,SAAQC,WAAR,QAA0B,OAA1B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","sourcesContent":["// Example 2\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {createStore} from 'redux';\r\n\r\n\r\n/* \r\nExample 1:\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {createStore} from 'redux';\r\n\r\nconst INTERNAL_USER = 'INTERNAL_USER';\r\nconst EXTERNAL_USER = 'EXTERNAL_USER';\r\n// Action\r\nconst intenalUserAction = () => ({type:INTERNAL_USER});\r\nconst externalUserAction = () => ({type:EXTERNAL_USER});\r\n// Reducer\r\n\r\nconst userReducer = (state,action) => {\r\n switch(action.type){\r\n   case INTERNAL_USER:\r\n     return state = 'user form internal';\r\n  \r\n  case EXTERNAL_USER:\r\n    return state = 'User from outsource';\r\n  \r\n  default:\r\n    return state='User type is not able to find';  \r\n }\r\n}\r\n\r\n// store \r\nlet store = createStore(userReducer);\r\n store.subscribe(() =>\r\n  console.log('State after dispatch: ', store.getState())\r\n);\r\n\r\n// disapatch\r\nconsole.log(store.dispatch(intenalUserAction()));\r\nconsole.log(store.dispatch(externalUserAction()));\r\n\r\nReactDOM.render(<h1>test</h1>,document.getElementById('root')); */\r\n\r\n/* \r\n\r\n\r\n */\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}