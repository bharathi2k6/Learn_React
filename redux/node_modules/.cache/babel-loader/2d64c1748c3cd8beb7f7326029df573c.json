{"ast":null,"code":"var _jsxFileName = \"D:\\\\new_redex\\\\redux\\\\src\\\\index.js\";\n// Example 2\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { createStore } from 'redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const intenalUserAction = () => ({\n  type: INTERNAL_USER\n});\nexport const externalUserAction = () => ({\n  type: EXTERNAL_USER\n});\nexport const subscribeAction = () => ({\n  type: SUBSCRIBE\n});\nconst initialValue = {\n  stateValue: 'User type not selected',\n  isSubscribe: false\n};\nconst INTERNAL_USER = 'INTERNAL_USER';\nconst EXTERNAL_USER = 'EXTERNAL_USER';\nconst SUBSCRIBE = 'SUBSCRIBE';\n\nconst userReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case SUBSCRIBE:\n      return { ...state,\n        isSubscribe: !state.isSubscribe\n      };\n      break;\n\n    case INTERNAL_USER:\n      return { ...state,\n        stateValue: 'User form mydomain'\n      };\n      break;\n\n    case EXTERNAL_USER:\n      return { ...state,\n        stateValue: 'User from other company'\n      };\n      break;\n\n    default:\n      return { ...state\n      };\n      break;\n  }\n};\n\nlet store = createStore(userReducer);\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 18\n}, this), document.getElementById('root'));\n/* \r\nExample 1:\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {createStore} from 'redux';\r\n\r\nconst INTERNAL_USER = 'INTERNAL_USER';\r\nconst EXTERNAL_USER = 'EXTERNAL_USER';\r\n// Action\r\nconst intenalUserAction = () => ({type:INTERNAL_USER});\r\nconst externalUserAction = () => ({type:EXTERNAL_USER});\r\n// Reducer\r\n\r\nconst userReducer = (state,action) => {\r\n switch(action.type){\r\n   case INTERNAL_USER:\r\n     return state = 'user form internal';\r\n  \r\n  case EXTERNAL_USER:\r\n    return state = 'User from outsource';\r\n  \r\n  default:\r\n    return state='User type is not able to find';  \r\n }\r\n}\r\n\r\n// store \r\nlet store = createStore(userReducer);\r\n store.subscribe(() =>\r\n  console.log('State after dispatch: ', store.getState())\r\n);\r\n\r\n// disapatch\r\nconsole.log(store.dispatch(intenalUserAction()));\r\nconsole.log(store.dispatch(externalUserAction()));\r\n\r\nReactDOM.render(<h1>test</h1>,document.getElementById('root')); */","map":{"version":3,"sources":["D:/new_redex/redux/src/index.js"],"names":["React","ReactDOM","App","createStore","intenalUserAction","type","INTERNAL_USER","externalUserAction","EXTERNAL_USER","subscribeAction","SUBSCRIBE","initialValue","stateValue","isSubscribe","userReducer","state","action","store","render","document","getElementById"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,aAAP;AACA,SAAQC,WAAR,QAA0B,OAA1B;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AAACC,EAAAA,IAAI,EAACC;AAAN,CAAP,CAA1B;AACP,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AAACF,EAAAA,IAAI,EAACG;AAAN,CAAP,CAA3B;AACP,OAAO,MAAMC,eAAe,GAAG,OAAM;AAACJ,EAAAA,IAAI,EAACK;AAAN,CAAN,CAAxB;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAG,wBADM;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAArB;AAIA,MAAMP,aAAa,GAAG,eAAtB;AACA,MAAME,aAAa,GAAG,eAAtB;AACA,MAAME,SAAS,GAAG,WAAlB;;AAEA,MAAMI,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAsBK,MAAtB,KAAiC;AACpD,UAAOA,MAAM,CAACX,IAAd;AACC,SAAKK,SAAL;AACG,aAAO,EACN,GAAGK,KADG;AAENF,QAAAA,WAAW,EAAE,CAACE,KAAK,CAACF;AAFd,OAAP;AAID;;AACF,SAAKP,aAAL;AACG,aAAO,EACN,GAAGS,KADG;AAENH,QAAAA,UAAU,EAAC;AAFL,OAAP;AAIH;;AACA,SAAKJ,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,UAAU,EAAC;AAFN,OAAP;AAIF;;AACA;AACE,aAAO,EACL,GAAGG;AADE,OAAP;AAGF;AAvBD;AAyBA,CA1BD;;AA4BC,IAAIE,KAAK,GAAGd,WAAW,CAACW,WAAD,CAAvB;AAEDb,QAAQ,CAACiB,MAAT,eAAiB,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA,yBACf,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADe;AAAA;AAAA;AAAA;AAAA,QAAjB,EAGAE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// Example 2\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css';\r\nimport {createStore} from 'redux';\r\n\r\nexport const intenalUserAction = () => ({type:INTERNAL_USER});\r\nexport const externalUserAction = () => ({type:EXTERNAL_USER});\r\nexport const subscribeAction = () =>({type:SUBSCRIBE});\r\n\r\nconst initialValue = {\r\n  stateValue : 'User type not selected',\r\n  isSubscribe:false\r\n}\r\nconst INTERNAL_USER = 'INTERNAL_USER';\r\nconst EXTERNAL_USER = 'EXTERNAL_USER';\r\nconst SUBSCRIBE = 'SUBSCRIBE';\r\n\r\nconst userReducer = (state = initialValue,action) => {\r\n switch(action.type){\r\n  case SUBSCRIBE:\r\n     return {\r\n      ...state,\r\n      isSubscribe: !state.isSubscribe\r\n     }\r\n    break;\r\n  case INTERNAL_USER:\r\n     return {\r\n      ...state,\r\n      stateValue:'User form mydomain'\r\n     }\r\n  break;\r\n  case EXTERNAL_USER:\r\n    return {\r\n      ...state,\r\n      stateValue:'User from other company'\r\n     }    \r\n  break;\r\n  default:\r\n    return {\r\n      ...state\r\n    }\r\n  break;\r\n }\r\n}\r\n\r\n let store = createStore(userReducer); \r\n\r\nReactDOM.render( <Provider store={store}>\r\n  <App />\r\n</Provider>,\r\ndocument.getElementById('root'));\r\n\r\n/* \r\nExample 1:\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {createStore} from 'redux';\r\n\r\nconst INTERNAL_USER = 'INTERNAL_USER';\r\nconst EXTERNAL_USER = 'EXTERNAL_USER';\r\n// Action\r\nconst intenalUserAction = () => ({type:INTERNAL_USER});\r\nconst externalUserAction = () => ({type:EXTERNAL_USER});\r\n// Reducer\r\n\r\nconst userReducer = (state,action) => {\r\n switch(action.type){\r\n   case INTERNAL_USER:\r\n     return state = 'user form internal';\r\n  \r\n  case EXTERNAL_USER:\r\n    return state = 'User from outsource';\r\n  \r\n  default:\r\n    return state='User type is not able to find';  \r\n }\r\n}\r\n\r\n// store \r\nlet store = createStore(userReducer);\r\n store.subscribe(() =>\r\n  console.log('State after dispatch: ', store.getState())\r\n);\r\n\r\n// disapatch\r\nconsole.log(store.dispatch(intenalUserAction()));\r\nconsole.log(store.dispatch(externalUserAction()));\r\n\r\nReactDOM.render(<h1>test</h1>,document.getElementById('root')); */\r\n\r\n"]},"metadata":{},"sourceType":"module"}