{"ast":null,"code":"var _jsxFileName = \"D:\\\\new_redex\\\\redux\\\\src\\\\App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { intenalUserAction, externalUserAction, subscribeAction } from './index'; // Example 3 \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.isSubscribe ? 'true' : 'false'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: users.stateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !users.isSubscribe,\n        onClick: () => dispatch(intenalUserAction()),\n        children: \"Internal User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !users.isSubscribe,\n        onClick: () => dispatch(externalUserAction()),\n        children: \"External Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(subscribeAction()),\n        children: !users.isSubscribe ? 'Subscribe' : 'UnSubscribe'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    intenalUser: () => dispatch(intenalUserAction()),\n    externalUser: () => dispatch(externalUserAction()),\n    subscribe: () => dispatch(subscribeAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // Example 2\n\n/* const App = () => {\n   const users = useSelector(state=>state);\n   const dispatch= useDispatch();\n   return (\n     <>\n     <h1>{users.isSubscribe?'true':'false'}</h1>\n     <h1>{users.stateValue}</h1>    \n     <button disabled = {!users.isSubscribe}  onClick = {()=>dispatch(intenalUserAction())}>Internal User</button>&nbsp;\n     <button disabled = {!users.isSubscribe} onClick = {()=>dispatch(externalUserAction())}>External Action</button> &nbsp;  \n     <button onClick = {()=>dispatch(subscribeAction())}>{!users.isSubscribe?'Subscribe':'UnSubscribe'}</button>  \n     </>\n   );\n }\n  export default App; */\n\n/* class App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n     return (\n      <>\n      <h1>{this.props.isSubscribe?'true':'false'}</h1>\n      <h1>{JSON.stringify(this.props)}</h1>    \n      </>\n\n     );\n\n\n  } \n  \n  } \n\n\n\nconst mapStateToProps = (state)=>{\n return state;\n}\n\nconst mapDispatchToProps= (dispatch) =>{\n  return{\n    intenalUser : () => dispatch(intenalUserAction()),\n    externalUser : () => dispatch(externalUserAction()),\n    subscribe : () => dispatch(subscribeAction())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App); */","map":{"version":3,"sources":["D:/new_redex/redux/src/App.js"],"names":["React","ReactDOM","useSelector","useDispatch","connect","intenalUserAction","externalUserAction","subscribeAction","App","Component","constructor","props","render","isSubscribe","users","stateValue","dispatch","mapStateToProps","state","mapDispatchToProps","intenalUser","externalUser","subscribe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAiD,aAAjD;AACA,SAAQC,iBAAR,EAA2BC,kBAA3B,EAA+CC,eAA/C,QAAqE,SAArE,C,CACA;;;;;AACA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AACDC,EAAAA,MAAM,GAAE;AACL,wBACC;AAAA,8BACA;AAAA,kBAAK,KAAKD,KAAL,CAAWE,WAAX,GAAuB,MAAvB,GAA8B;AAAnC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAKC,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,QAAQ,EAAI,CAACD,KAAK,CAACD,WAA3B;AAAyC,QAAA,OAAO,EAAI,MAAIG,QAAQ,CAACX,iBAAiB,EAAlB,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,uBAIA;AAAQ,QAAA,QAAQ,EAAI,CAACS,KAAK,CAACD,WAA3B;AAAwC,QAAA,OAAO,EAAI,MAAIG,QAAQ,CAACV,kBAAkB,EAAnB,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,wBAKA;AAAQ,QAAA,OAAO,EAAI,MAAIU,QAAQ,CAACT,eAAe,EAAhB,CAA/B;AAAA,kBAAqD,CAACO,KAAK,CAACD,WAAP,GAAmB,WAAnB,GAA+B;AAApF;AAAA;AAAA;AAAA;AAAA,cALA;AAAA,oBADD;AAUF;;AAf+B;;AAmBlC,MAAMI,eAAe,GAAIC,KAAD,IAAS;AAChC,SAAOA,KAAP;AACA,CAFD;;AAIA,MAAMC,kBAAkB,GAAGH,QAAD,IAAa;AACrC,SAAM;AACJI,IAAAA,WAAW,EAAG,MAAMJ,QAAQ,CAACX,iBAAiB,EAAlB,CADxB;AAEJgB,IAAAA,YAAY,EAAG,MAAML,QAAQ,CAACV,kBAAkB,EAAnB,CAFzB;AAGJgB,IAAAA,SAAS,EAAG,MAAMN,QAAQ,CAACT,eAAe,EAAhB;AAHtB,GAAN;AAKD,CAND;;AAOA,eAAeH,OAAO,CAACa,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CX,GAA5C,CAAf,C,CAEA;;AACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch ,connect} from 'react-redux'\nimport {intenalUserAction, externalUserAction, subscribeAction} from './index';\n// Example 3 \nclass App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n     return (\n      <>\n      <h1>{this.props.isSubscribe?'true':'false'}</h1>\n      <h1>{users.stateValue}</h1>    \n      <button disabled = {!users.isSubscribe}  onClick = {()=>dispatch(intenalUserAction())}>Internal User</button>&nbsp;\n      <button disabled = {!users.isSubscribe} onClick = {()=>dispatch(externalUserAction())}>External Action</button> &nbsp;  \n      <button onClick = {()=>dispatch(subscribeAction())}>{!users.isSubscribe?'Subscribe':'UnSubscribe'}</button>  \n   \n      </>\n     );\n  } \n  } \n\n\nconst mapStateToProps = (state)=>{\n return state;\n}\n\nconst mapDispatchToProps= (dispatch) =>{\n  return{\n    intenalUser : () => dispatch(intenalUserAction()),\n    externalUser : () => dispatch(externalUserAction()),\n    subscribe : () => dispatch(subscribeAction())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n\n// Example 2\n /* const App = () => {\n    const users = useSelector(state=>state);\n    const dispatch= useDispatch();\n    return (\n      <>\n      <h1>{users.isSubscribe?'true':'false'}</h1>\n      <h1>{users.stateValue}</h1>    \n      <button disabled = {!users.isSubscribe}  onClick = {()=>dispatch(intenalUserAction())}>Internal User</button>&nbsp;\n      <button disabled = {!users.isSubscribe} onClick = {()=>dispatch(externalUserAction())}>External Action</button> &nbsp;  \n      <button onClick = {()=>dispatch(subscribeAction())}>{!users.isSubscribe?'Subscribe':'UnSubscribe'}</button>  \n      </>\n    );\n  }\n\n  export default App; */\n\n/* class App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n     return (\n      <>\n      <h1>{this.props.isSubscribe?'true':'false'}</h1>\n      <h1>{JSON.stringify(this.props)}</h1>    \n      </>\n\n     );\n\n\n  } \n  \n  } \n\n\n\nconst mapStateToProps = (state)=>{\n return state;\n}\n\nconst mapDispatchToProps= (dispatch) =>{\n  return{\n    intenalUser : () => dispatch(intenalUserAction()),\n    externalUser : () => dispatch(externalUserAction()),\n    subscribe : () => dispatch(subscribeAction())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App); */"]},"metadata":{},"sourceType":"module"}