{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { intenalUserAction, externalUserAction, subscribeAction } from './index'; // Example 2\n\n/* const App = () => {\n   const users = useSelector(state=>state);\n   const dispatch= useDispatch();\n   return (\n     <>\n     <h1>{users.isSubscribe?'true':'false'}</h1>\n     <h1>{users.stateValue}</h1>    \n     <button disabled = {!users.isSubscribe}  onClick = {()=>dispatch(intenalUserAction())}>Internal User</button>&nbsp;\n     <button disabled = {!users.isSubscribe} onClick = {()=>dispatch(externalUserAction())}>External Action</button> &nbsp;  \n     <button onClick = {()=>dispatch(subscribeAction())}>{!users.isSubscribe?'Subscribe':'UnSubscribe'}</button>  \n     </>\n   );\n }\n  export default App; */\n\n/* class App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n     return (\n      <>\n      <h1>{this.props.isSubscribe?'true':'false'}</h1>\n      <h1>{JSON.stringify(this.props)}</h1>    \n      </>\n\n     );\n\n\n  } \n  \n  } \n\n\n\nconst mapStateToProps = (state)=>{\n return state;\n}\n\nconst mapDispatchToProps= (dispatch) =>{\n  return{\n    intenalUser : () => dispatch(intenalUserAction()),\n    externalUser : () => dispatch(externalUserAction()),\n    subscribe : () => dispatch(subscribeAction())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App); */","map":{"version":3,"sources":["D:/new_redex/redux/src/App.js"],"names":["React","ReactDOM","useSelector","useDispatch","connect","intenalUserAction","externalUserAction","subscribeAction"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAiD,aAAjD;AACA,SAAQC,iBAAR,EAA2BC,kBAA3B,EAA+CC,eAA/C,QAAqE,SAArE,C,CACC;;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch ,connect} from 'react-redux'\nimport {intenalUserAction, externalUserAction, subscribeAction} from './index';\n // Example 2\n /* const App = () => {\n    const users = useSelector(state=>state);\n    const dispatch= useDispatch();\n    return (\n      <>\n      <h1>{users.isSubscribe?'true':'false'}</h1>\n      <h1>{users.stateValue}</h1>    \n      <button disabled = {!users.isSubscribe}  onClick = {()=>dispatch(intenalUserAction())}>Internal User</button>&nbsp;\n      <button disabled = {!users.isSubscribe} onClick = {()=>dispatch(externalUserAction())}>External Action</button> &nbsp;  \n      <button onClick = {()=>dispatch(subscribeAction())}>{!users.isSubscribe?'Subscribe':'UnSubscribe'}</button>  \n      </>\n    );\n  }\n\n  export default App; */\n\n/* class App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n     return (\n      <>\n      <h1>{this.props.isSubscribe?'true':'false'}</h1>\n      <h1>{JSON.stringify(this.props)}</h1>    \n      </>\n\n     );\n\n\n  } \n  \n  } \n\n\n\nconst mapStateToProps = (state)=>{\n return state;\n}\n\nconst mapDispatchToProps= (dispatch) =>{\n  return{\n    intenalUser : () => dispatch(intenalUserAction()),\n    externalUser : () => dispatch(externalUserAction()),\n    subscribe : () => dispatch(subscribeAction())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App); */"]},"metadata":{},"sourceType":"module"}