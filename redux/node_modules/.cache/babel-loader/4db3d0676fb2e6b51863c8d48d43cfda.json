{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nconst INTERNAL_USER = 'INTERNAL_USER';\nconst EXTERNAL_USER = 'EXTERNAL_USER';\nconst SUBSCRIBE = 'SUBSCRIBE';\nexport const intenalUserAction = () => ({\n  type: INTERNAL_USER\n});\nexport const externalUserAction = () => ({\n  type: EXTERNAL_USER\n});\nexport const subscribeAction = () => ({\n  type: SUBSCRIBE\n});\n/* const initialValue = {\r\n  stateValue : 'User type not selected',\r\n  isSubscribe:false\r\n}\r\n\r\nconst userReducer = (state = initialValue,action) => {\r\n switch(action.type){\r\n  case SUBSCRIBE:\r\n     return {\r\n      ...state,\r\n      isSubscribe: !state.isSubscribe\r\n     }\r\n    break;\r\n  case INTERNAL_USER:\r\n     return {\r\n      ...state,\r\n      stateValue:'User form mydomain'\r\n     }\r\n  break;\r\n  case EXTERNAL_USER:\r\n    return {\r\n      ...state,\r\n      stateValue:'User from other company'\r\n     }    \r\n  break;\r\n  default:\r\n    return {\r\n      ...state\r\n    }\r\n  break;\r\n }\r\n}\r\n\r\n let store = createStore(userReducer); \r\n\r\nReactDOM.render( <Provider store={store}>\r\n  <App />\r\n</Provider>,\r\ndocument.getElementById('root')); */","map":{"version":3,"sources":["D:/new_redex/redux/src/index.js"],"names":["React","ReactDOM","App","createStore","Provider","INTERNAL_USER","EXTERNAL_USER","SUBSCRIBE","intenalUserAction","type","externalUserAction","subscribeAction"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AAACC,EAAAA,IAAI,EAACJ;AAAN,CAAP,CAA1B;AACP,OAAO,MAAMK,kBAAkB,GAAG,OAAO;AAACD,EAAAA,IAAI,EAACH;AAAN,CAAP,CAA3B;AACP,OAAO,MAAMK,eAAe,GAAG,OAAM;AAACF,EAAAA,IAAI,EAACF;AAAN,CAAN,CAAxB;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {createStore} from 'redux';\r\nimport { Provider } from 'react-redux'\r\n\r\nconst INTERNAL_USER = 'INTERNAL_USER';\r\nconst EXTERNAL_USER = 'EXTERNAL_USER';\r\nconst SUBSCRIBE = 'SUBSCRIBE'\r\n\r\nexport const intenalUserAction = () => ({type:INTERNAL_USER});\r\nexport const externalUserAction = () => ({type:EXTERNAL_USER});\r\nexport const subscribeAction = () =>({type:SUBSCRIBE});\r\n\r\n/* const initialValue = {\r\n  stateValue : 'User type not selected',\r\n  isSubscribe:false\r\n}\r\n\r\nconst userReducer = (state = initialValue,action) => {\r\n switch(action.type){\r\n  case SUBSCRIBE:\r\n     return {\r\n      ...state,\r\n      isSubscribe: !state.isSubscribe\r\n     }\r\n    break;\r\n  case INTERNAL_USER:\r\n     return {\r\n      ...state,\r\n      stateValue:'User form mydomain'\r\n     }\r\n  break;\r\n  case EXTERNAL_USER:\r\n    return {\r\n      ...state,\r\n      stateValue:'User from other company'\r\n     }    \r\n  break;\r\n  default:\r\n    return {\r\n      ...state\r\n    }\r\n  break;\r\n }\r\n}\r\n\r\n let store = createStore(userReducer); \r\n\r\nReactDOM.render( <Provider store={store}>\r\n  <App />\r\n</Provider>,\r\ndocument.getElementById('root')); */\r\n"]},"metadata":{},"sourceType":"module"}